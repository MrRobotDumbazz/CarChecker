version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: car_status_postgres
    environment:
      POSTGRES_DB: car_status_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: your_password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./internal/database/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - car_status_network

  # Optional: RabbitMQ for queue processing
  rabbitmq:
    image: rabbitmq:3-management
    container_name: car_status_rabbitmq
    ports:
      - "5672:5672"     # AMQP port
      - "15672:15672"   # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - car_status_network
    profiles:
      - queue

  # Optional: Kafka for high-throughput queue processing
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: car_status_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - car_status_network
    profiles:
      - kafka

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: car_status_kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - car_status_network
    profiles:
      - kafka

  # Optional: Redis for caching
  redis:
    image: redis:7-alpine
    container_name: car_status_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - car_status_network
    profiles:
      - cache

volumes:
  postgres_data:
    driver: local
  rabbitmq_data:
    driver: local
  kafka_data:
    driver: local
  redis_data:
    driver: local

networks:
  car_status_network:
    driver: bridge